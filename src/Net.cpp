#include <Net.h>
#include <types.h>
#include <glm/gtc/matrix_transform.hpp>
#include <string>

Net::Net() {
	createShaders();
	createModels();
	Ambient = { 0.2f, 0.2f, 0.1f };
	Diffuse = { 0.9f, 1.f, 0.8f };
	Specular = { 0.9f, 1.f, 0.8f };
	Shine = 1.5;
}

void Net::Init() {

}

void Net::Update(float deltaTime) {
	// Transform = 
}


void Net::createShaders() {
	// Creates a shader object and assigns it to our model
	Path shaderPath = std::filesystem::current_path() / "assets" / "shaders";

	_basicLitShader = std::make_shared<Shader>(shaderPath / "basic_lit.vert", shaderPath / "basic_lit.frag");
}

void Net::createModels() {
	auto texturePath = std::filesystem::current_path() / "assets" / "textures";

	auto NetMesh = GenNetMesh();

	auto NetMaterial = std::make_shared<Material>(_basicLitShader);

	auto NetTexture = std::make_shared<Texture>(texturePath / "dirty-metal-texture.jpg");

	NetMaterial->AddTexture(NetTexture);

	_models.emplace_back(NetMesh, NetMaterial);
}

void Net::Draw(const SceneParameters& sceneParameters) {
	Shader* lastBoundShader = nullptr;
	for (auto& model : _models) {
		auto* shader = model.GetMaterial()->GetShader();
		auto* mesh = model.GetMesh();
		if (shader != lastBoundShader) {
			model.GetMaterial()->Bind(sceneParameters, Transform * mesh->Transform);
			// Take care of lights
			for (auto i = 0; i < MAX_POINT_LIGHTS; i++) {
				std::string baseUniformName = "pointLights[";
				baseUniformName += std::to_string(i) + "]";
				PointLightStruct pointLight = i < sceneParameters.Lights.size() ? sceneParameters.Lights[i] : PointLightStruct{};
				shader->SetVec3(baseUniformName + ".Position", pointLight.Position);
				shader->SetVec3(baseUniformName + ".Ambient", pointLight.AmbientColor);
				shader->SetVec3(baseUniformName + ".Diffuse", pointLight.DiffuseColor);
				shader->SetVec3(baseUniformName + ".Specular", pointLight.SpecularColor);

				shader->SetFloat(baseUniformName + ".Constant", pointLight.Constant);
				shader->SetFloat(baseUniformName + ".Linear", pointLight.Linear);
				shader->SetFloat(baseUniformName + ".Quadratic", pointLight.Quadratic);
			}

			shader->SetVec3("dirLight.Direction", sceneParameters.DirLight.Direction);
			shader->SetVec3("dirLight.Ambient", sceneParameters.DirLight.AmbientColor);
			shader->SetVec3("dirLight.Diffuse", sceneParameters.DirLight.DiffuseColor);
			shader->SetVec3("dirLight.Specular", sceneParameters.DirLight.SpecularColor);

			shader->SetVec3("material.Ambient", Ambient);
			shader->SetVec3("material.Diffuse", Diffuse);
			shader->SetVec3("material.Specular", Specular);
			shader->SetFloat("material.Shininess", Shine);
		}
		// shader->SetMat4("model", Transform * mesh->Transform);
		mesh->Draw();
	}

}

void Net::ProcessLighting(SceneParameters& sceneParameters)
{
	return;
}

std::shared_ptr<Mesh> Net::GenNetMesh() {
	std::vector<Vertex> vertices;

	GLfloat verts[] = {
		// cylinder bottom		// normals			// texture coords
		1.0f, 0.0f, 0.0f,		0.0f, -1.0f, 0.0f,	0.5f,1.0f,
		.98f, 0.0f, -0.17f,		0.0f, -1.0f, 0.0f,	0.41f, 0.983f,
		.94f, 0.0f, -0.34f,		0.0f, -1.0f, 0.0f,	0.33f, 0.96f,
		.87f, 0.0f, -0.5f,		0.0f, -1.0f, 0.0f,	0.25f, 0.92f,
		.77f, 0.0f, -0.64f,		0.0f, -1.0f, 0.0f,	0.17f, 0.87f,
		.64f, 0.0f, -0.77f,		0.0f, -1.0f, 0.0f,	0.13f, 0.83f,
		.5f, 0.0f, -0.87f,		0.0f, -1.0f, 0.0f,	0.08f, 0.77f,
		.34f, 0.0f, -0.94f,		0.0f, -1.0f, 0.0f,	0.04f, 0.68f,
		.17f, 0.0f, -0.98f,		0.0f, -1.0f, 0.0f,	0.017f, 0.6f,
		0.0f, 0.0f, -1.0f,		0.0f, -1.0f, 0.0f,	0.0f,0.5f,
		-.17f, 0.0f, -0.98f,	0.0f, -1.0f, 0.0f,	0.017f, 0.41f,
		-.34f, 0.0f, -0.94f,	0.0f, -1.0f, 0.0f,	0.04f, 0.33f,
		-.5f, 0.0f, -0.87f,		0.0f, -1.0f, 0.0f,	0.08f, 0.25f,
		-.64f, 0.0f, -0.77f,	0.0f, -1.0f, 0.0f,	0.13f, 0.17f,
		-.77f, 0.0f, -0.64f,	0.0f, -1.0f, 0.0f,	0.17f, 0.13f,
		-.87f, 0.0f, -0.5f,		0.0f, -1.0f, 0.0f,	0.25f, 0.08f,
		-.94f, 0.0f, -0.34f,	0.0f, -1.0f, 0.0f,	0.33f, 0.04f,
		-.98f, 0.0f, -0.17f,	0.0f, -1.0f, 0.0f,	0.41f, 0.017f,
		-1.0f, 0.0f, 0.0f,		0.0f, -1.0f, 0.0f,	0.5f, 0.0f,
		-.98f, 0.0f, 0.17f,		0.0f, -1.0f, 0.0f,	0.6f, 0.017f,
		-.94f, 0.0f, 0.34f,		0.0f, -1.0f, 0.0f,	0.68f, 0.04f,
		-.87f, 0.0f, 0.5f,		0.0f, -1.0f, 0.0f,	0.77f, 0.08f,
		-.77f, 0.0f, 0.64f,		0.0f, -1.0f, 0.0f,	0.83f, 0.13f,
		-.64f, 0.0f, 0.77f,		0.0f, -1.0f, 0.0f,	0.87f, 0.17f,
		-.5f, 0.0f, 0.87f,		0.0f, -1.0f, 0.0f,	0.92f, 0.25f,
		-.34f, 0.0f, 0.94f,		0.0f, -1.0f, 0.0f,	0.96f, 0.33f,
		-.17f, 0.0f, 0.98f,		0.0f, -1.0f, 0.0f,	0.983f, 0.41f,
		0.0f, 0.0f, 1.0f,		0.0f, -1.0f, 0.0f,	1.0f, 0.5f,
		.17f, 0.0f, 0.98f,		0.0f, -1.0f, 0.0f,	0.983f, 0.6f,
		.34f, 0.0f, 0.94f,		0.0f, -1.0f, 0.0f,	0.96f, 0.68f,
		.5f, 0.0f, 0.87f,		0.0f, -1.0f, 0.0f,	0.92f, 0.77f,
		.64f, 0.0f, 0.77f,		0.0f, -1.0f, 0.0f,	0.87f, 0.83f,
		.77f, 0.0f, 0.64f,		0.0f, -1.0f, 0.0f,	0.83f, 0.87f,
		.87f, 0.0f, 0.5f,		0.0f, -1.0f, 0.0f,	0.77f, 0.92f,
		.94f, 0.0f, 0.34f,		0.0f, -1.0f, 0.0f,	0.68f, 0.96f,
		.98f, 0.0f, 0.17f,		0.0f, -1.0f, 0.0f,	0.6f, 0.983f,

		// cylinder top			// normals			// texture coords
		0.5f, 1.0f, 0.0f,		0.0f, 1.0f, 0.0f,	0.5f,1.0f,
		.49f, 1.0f, -0.085f,	0.0f, 1.0f, 0.0f,	0.41f, 0.983f,
		.47f, 1.0f, -0.17f,		0.0f, 1.0f, 0.0f,	0.33f, 0.96f,
		.435f, 1.0f, -0.25f,	0.0f, 1.0f, 0.0f,	0.25f, 0.92f,
		.385f, 1.0f, -0.32f,	0.0f, 1.0f, 0.0f,	0.17f, 0.87f,
		.32f, 1.0f, -0.385f,	0.0f, 1.0f, 0.0f,	0.13f, 0.83f,
		.25f, 1.0f, -0.435f,	0.0f, 1.0f, 0.0f,	0.08f, 0.77f,
		.17f, 1.0f, -0.47f,		0.0f, 1.0f, 0.0f,	0.04f, 0.68f,
		.085f, 1.0f, -0.49f,	0.0f, 1.0f, 0.0f,	0.017f, 0.6f,
		0.0f, 1.0f, -0.5f,		0.0f, 1.0f, 0.0f,	0.0f,0.5f,
		-.085f, 1.0f, -0.49f,	0.0f, 1.0f, 0.0f,	0.017f, 0.41f,
		-.17f, 1.0f, -0.47f,	0.0f, 1.0f, 0.0f,	0.04f, 0.33f,
		-.25f, 1.0f, -0.435f,	0.0f, 1.0f, 0.0f,	0.08f, 0.25f,
		-.32f, 1.0f, -0.385f,	0.0f, 1.0f, 0.0f,	0.13f, 0.17f,
		-.385f, 1.0f, -0.32f,	0.0f, 1.0f, 0.0f,	0.17f, 0.13f,
		-.435f, 1.0f, -0.25f,	0.0f, 1.0f, 0.0f,	0.25f, 0.08f,
		-.47f, 1.0f, -0.17f,	0.0f, 1.0f, 0.0f,	0.33f, 0.04f,
		-.49f, 1.0f, -0.085f,	0.0f, 1.0f, 0.0f,	0.41f, 0.017f,
		-0.5f, 1.0f, 0.0f,		0.0f, 1.0f, 0.0f,	0.5f, 0.0f,
		-.49f, 1.0f, 0.085f,	0.0f, 1.0f, 0.0f,	0.6f, 0.017f,
		-.47f, 1.0f, 0.17f,		0.0f, 1.0f, 0.0f,	0.68f, 0.04f,
		-.435f, 1.0f, 0.25f,	0.0f, 1.0f, 0.0f,	0.77f, 0.08f,
		-.385f, 1.0f, 0.32f,	0.0f, 1.0f, 0.0f,	0.83f, 0.13f,
		-.32f, 1.0f, 0.385f,	0.0f, 1.0f, 0.0f,	0.87f, 0.17f,
		-.25f, 1.0f, 0.435f,	0.0f, 1.0f, 0.0f,	0.92f, 0.25f,
		-.17f, 1.0f, 0.47f,		0.0f, 1.0f, 0.0f,	0.96f, 0.33f,
		-.085f, 1.0f, 0.49f,	0.0f, 1.0f, 0.0f,	0.983f, 0.41f,
		0.0f, 1.0f, 0.5f,		0.0f, 1.0f, 0.0f,	1.0f, 0.5f,
		.085f, 1.0f, 0.49f,		0.0f, 1.0f, 0.0f,	0.983f, 0.6f,
		.17f, 1.0f, 0.47f,		0.0f, 1.0f, 0.0f,	0.96f, 0.68f,
		.25f, 1.0f, 0.435f,		0.0f, 1.0f, 0.0f,	0.92f, 0.77f,
		.32f, 1.0f, 0.385f,		0.0f, 1.0f, 0.0f,	0.87f, 0.83f,
		.385f, 1.0f, 0.32f,		0.0f, 1.0f, 0.0f,	0.83f, 0.87f,
		.435f, 1.0f, 0.25f,		0.0f, 1.0f, 0.0f,	0.77f, 0.92f,
		.47f, 1.0f, 0.17f,		0.0f, 1.0f, 0.0f,	0.68f, 0.96f,
		.49f, 1.0f, 0.085f,		0.0f, 1.0f, 0.0f,	0.6f, 0.983f,

		// cylinder body		// normals				// texture coords
		0.5f, 1.0f, 0.0f,		1.0f, 0.0f, 0.0f,		0.25,1.0,
		1.0f, 0.0f, 0.0f,		1.0f, 0.0f, 0.0f,		0.0,0.0,
		.98f, 0.0f, -0.17f,		1.0f, 0.0f, 0.0f,		0.0277,0.0,
		0.5f, 1.0f, 0.0f,		0.92f, 0.0f, -0.08f,	0.25,1.0,
		.49f, 1.0f, -0.085f,	0.92f, 0.0f, -0.08f,	0.2635,1.0,
		.98f, 0.0f, -0.17f,		0.92f, 0.0f, -0.08f,	0.0277,0.0,
		.94f, 0.0f, -0.34f,		0.83f, 0.0f, -0.17f,	0.0554,0.0,
		.49f, 1.0f, -0.085f,	0.83f, 0.0f, -0.17f,	0.2635,1.0,
		.47f, 1.0f, -0.17f,		0.83f, 0.0f, -0.17f,	0.277,1.0,
		.94f, 0.0f, -0.34f,		0.75f, 0.0f, -0.25f,	0.0554,0.0,
		.87f, 0.0f, -0.5f,		0.75f, 0.0f, -0.25f,	0.0831,0.0,
		.47f, 1.0f, -0.17f,		0.75f, 0.0f, -0.25f,	0.277,1.0,
		.435f, 1.0f, -0.25f,	0.67f, 0.0f, -0.33f,	0.2905,1.0,
		.87f, 0.0f, -0.5f,		0.67f, 0.0f, -0.33f,	0.0831,0.0,
		.77f, 0.0f, -0.64f,		0.67f, 0.0f, -0.33f,	0.1108,0.0,
		.435f, 1.0f, -0.25f,	0.58f, 0.0f, -0.42f,	0.2905,1.0,
		.385f, 1.0f, -0.32f,	0.58f, 0.0f, -0.42f,	0.304,1.0,
		.77f, 0.0f, -0.64f,		0.58f, 0.0f, -0.42f,	0.1108,0.0,
		.64f, 0.0f, -0.77f,		0.5f, 0.0f, -0.5f,		0.1385,0.0,
		.385f, 1.0f, -0.32f,	0.5f, 0.0f, -0.5f,		0.304,1.0,
		.32f, 1.0f, -0.385f,	0.5f, 0.0f, -0.5f,		0.3175,1.0,
		.64f, 0.0f, -0.77f,		0.42f, 0.0f, -0.58f,	0.1385,0.0,
		.5f, 0.0f, -0.87f,		0.42f, 0.0f, -0.58f,	0.1662,0.0,
		.32f, 1.0f, -0.385f,	0.42f, 0.0f, -0.58f,	0.3175, 1.0,
		.25f, 1.0f, -0.435f,	0.33f, 0.0f, -0.67f,	0.331, 1.0,
		.5f, 0.0f, -0.87f,		0.33f, 0.0f, -0.67f,	0.1662, 0.0,
		.34f, 0.0f, -0.94f,		0.33f, 0.0f, -0.67f,	0.1939, 0.0,
		.25f, 1.0f, -0.435f,	0.25f, 0.0f, -0.75f,	0.331, 1.0,
		.17f, 1.0f, -0.47f,		0.25f, 0.0f, -0.75f,	0.3445, 1.0,
		.34f, 0.0f, -0.94f,		0.25f, 0.0f, -0.75f,	0.1939, 0.0,
		.17f, 0.0f, -0.98f,		0.17f, 0.0f, -0.83f,	0.2216, 0.0,
		.17f, 1.0f, -0.47f,		0.17f, 0.0f, -0.83f,	0.3445, 1.0,
		.085f, 1.0f, -0.49f,	0.17f, 0.0f, -0.83f,	0.358, 1.0,
		.17f, 0.0f, -0.98f,		0.08f, 0.0f, -0.92f,	0.2216, 0.0,
		0.0f, 0.0f, -1.0f,		0.08f, 0.0f, -0.92f,	0.2493, 0.0,
		.085f, 1.0f, -0.49f,	0.08f, 0.0f, -0.92f,	0.358, 1.0,
		0.0f, 1.0f, -0.5f,		0.0f, 0.0f, -1.0f,		0.3715, 1.0,
		0.0f, 0.0f, -1.0f,		0.0f, 0.0f, -1.0f,		0.2493, 0.0,
		-.17f, 0.0f, -0.98f,	0.0f, 0.0f, -1.0f,		0.277, 0.0,
		0.0f, 1.0f, -0.5f,		0.08f, 0.0f, -1.08f,	0.3715, 1.0,
		-.085f, 1.0f, -0.49f,	-0.08f, 0.0f, -0.92f,	0.385, 1.0,
		-.17f, 0.0f, -0.98f,	-0.08f, 0.0f, -0.92f,	0.277, 0.0,
		-.34f, 0.0f, -0.94f,	-0.08f, 0.0f, -0.92f,	0.3047, 0.0,
		-.085f, 1.0f, -0.49f,	-0.08f, 0.0f, -0.92f,	0.385, 1.0,
		-.17f, 1.0f, -0.47f,	-0.17f, 0.0f, -0.83f,	0.3985, 1.0,
		-.34f, 0.0f, -0.94f,	-0.17f, 0.0f, -0.83f,	0.3047, 0.0,
		-.5f, 0.0f, -0.87f,		-0.17f, 0.0f, -0.83f,	0.3324, 0.0,
		-.17f, 1.0f, -0.47f,	-0.25f, 0.0f, -0.75f,	0.3985, 1.0,
		-.25f, 1.0f, -0.435f,	-0.25f, 0.0f, -0.75f,	0.412, 1.0,
		-.5f, 0.0f, -0.87f,		-0.25f, 0.0f, -0.75f,	0.3324, 0.0,
		-.64f, 0.0f, -0.77f,	-0.33f, 0.0f, -0.67f,	0.3601, 0.0,
		-.25f, 1.0f, -0.435f,	-0.33f, 0.0f, -0.67f,	0.412, 1.0,
		-.32f, 1.0f, -0.385f,	-0.33f, 0.0f, -0.67f,	0.4255, 1.0,
		-.64f, 0.0f, -0.77f,	-0.42f, 0.0f, -0.58f,	0.3601, 0.0,
		-.77f, 0.0f, -0.64f,	-0.42f, 0.0f, -0.58f,	0.3878, 0.0,
		-.32f, 1.0f, -0.385f,	-0.42f, 0.0f, -0.58f,	0.4255, 1.0,
		-.385f, 1.0f, -0.32f,	-0.5f, 0.0f, -0.5f,		0.439, 1.0,
		-.77f, 0.0f, -0.64f,	-0.5f, 0.0f, -0.5f,		0.3878, 0.0,
		-.87f, 0.0f, -0.5f,		-0.5f, 0.0f, -0.5f,		0.4155, 0.0,
		-.385f, 1.0f, -0.32f,	-0.58f, 0.0f, -0.42f,	0.439, 1.0,
		-.435f, 1.0f, -0.25f,	-0.58f, 0.0f, -0.42f,	0.4525, 1.0,
		-.87f, 0.0f, -0.5f,		-0.58f, 0.0f, -0.42f,	0.4155, 0.0,
		-.94f, 0.0f, -0.34f,	-0.67f, 0.0f, -0.33f,	0.4432, 0.0,
		-.435f, 1.0f, -0.25f,	-0.67f, 0.0f, -0.33f,	0.4525, 1.0,
		-.47f, 1.0f, -0.17f,	-0.67f, 0.0f, -0.33f,	0.466, 1.0,
		-.94f, 0.0f, -0.34f,	-0.75f, 0.0f, -0.25f,	0.4432, 0.0,
		-.98f, 0.0f, -0.17f,	-0.75f, 0.0f, -0.25f,	0.4709, 0.0,
		-.47f, 1.0f, -0.17f,	-0.75f, 0.0f, -0.25f,	0.466, 1.0,
		-.49f, 1.0f, -0.085f,	-0.83f, 0.0f, -0.17f,	0.4795, 1.0,
		-.98f, 0.0f, -0.17f,	-0.83f, 0.0f, -0.17f,	0.4709, 0.0,
		-1.0f, 0.0f, 0.0f,		-0.83f, 0.0f, -0.17f,	0.4986, 0.0,
		-.49f, 1.0f, -0.085f,	-0.92f, 0.0f, -0.08f,	0.4795, 1.0,
		-0.5f, 1.0f, 0.0f,		-0.92f, 0.0f, -0.08f,	0.493, 1.0,
		-1.0f, 0.0f, 0.0f,		-0.92f, 0.0f, -0.08f,	0.4986, 0.0,
		-.98f, 0.0f, 0.17f,		-1.0f, 0.0f, 0.0f,		0.5263, 0.0,
		-0.5f, 1.0f, 0.0f,		-1.0f, 0.0f, 0.0f,		0.493, 1.0,
		-.49f, 1.0f, 0.085f,	-1.0f, 0.0f, 0.0f,		0.5065, 1.0,
		-.98f, 0.0f, 0.17f,		-0.92f, 0.0f, 0.08f,	0.5263, 0.0,
		-.94f, 0.0f, 0.34f,		-0.92f, 0.0f, 0.08f,	0.554, 0.0,
		-.49f, 1.0f, 0.085f,	-0.92f, 0.0f, 0.08f,	0.5065, 1.0,
		-.47f, 1.0f, 0.17f,		-0.83f, 0.0f, 0.17f,	0.52, 1.0,
		-.94f, 0.0f, 0.34f,		-0.83f, 0.0f, 0.17f,	0.554, 0.0,
		-.87f, 0.0f, 0.5f,		-0.83f, 0.0f, 0.17f,	0.5817, 0.0,
		-.47f, 1.0f, 0.17f,		-0.75f, 0.0f, 0.25f,	0.52, 1.0,
		-.435f, 1.0f, 0.25f,	-0.75f, 0.0f, 0.25f,	0.5335, 1.0,
		-.87f, 0.0f, 0.5f,		-0.75f, 0.0f, 0.25f,	0.5817, 0.0,
		-.77f, 0.0f, 0.64f,		-0.67f, 0.0f, 0.33f,	0.6094, 0.0,
		-.435f, 1.0f, 0.25f,	-0.67f, 0.0f, 0.33f,	0.5335, 1.0,
		-.385f, 1.0f, 0.32f,	-0.67f, 0.0f, 0.33f,	0.547, 1.0,
		-.77f, 0.0f, 0.64f,		-0.58f, 0.0f, 0.42f,	0.6094, 0.0,
		-.64f, 0.0f, 0.77f,		-0.58f, 0.0f, 0.42f,	0.6371, 0.0,
		-.385f, 1.0f, 0.32f,	-0.58f, 0.0f, 0.42f,	0.547, 1.0,
		-.32f, 1.0f, 0.385f,	-0.5f, 0.0f, 0.5f,		0.5605, 1.0,
		-.64f, 0.0f, 0.77f,		-0.5f, 0.0f, 0.5f,		0.6371, 0.0,
		-.5f, 0.0f, 0.87f,		-0.5f, 0.0f, 0.5f,		0.6648, 0.0,
		-.32f, 1.0f, 0.385f,	-0.42f, 0.0f, 0.58f,	0.5605, 1.0,
		-.25f, 1.0f, 0.435f,	-0.42f, 0.0f, 0.58f,	0.574, 1.0,
		-.5f, 0.0f, 0.87f,		-0.42f, 0.0f, 0.58f,	0.6648, 0.0,
		-.34f, 0.0f, 0.94f,		-0.33f, 0.0f, 0.67f,	0.6925, 0.0,
		-.25f, 1.0f, 0.435f,	-0.33f, 0.0f, 0.67f,	0.574, 1.0,
		-.17f, 1.0f, 0.47f,		-0.33f, 0.0f, 0.67f,	0.5875, 1.0,
		-.34f, 0.0f, 0.94f,		-0.25f, 0.0f, 0.75f,	0.6925, 0.0,
		-.17f, 0.0f, 0.98f,		-0.25f, 0.0f, 0.75f,	0.7202, 0.0,
		-.17f, 1.0f, 0.47f,		-0.25f, 0.0f, 0.75f,	0.5875, 1.0,
		-.085f, 1.0f, 0.49f,	-0.17f, 0.0f, 0.83f,	0.601, 1.0,
		-.17f, 0.0f, 0.98f,		-0.17f, 0.0f, 0.83f,	0.7202, 0.0,
		0.0f, 0.0f, 1.0f,		-0.17f, 0.0f, 0.83f,	0.7479, 0.0,
		-.085f, 1.0f, 0.49f,	-0.08f, 0.0f, 0.92f,	0.601, 1.0,
		0.0f, 1.0f, 0.5f,		-0.08f, 0.0f, 0.92f,	0.6145, 1.0,
		0.0f, 0.0f, 1.0f,		-0.08f, 0.0f, 0.92f,	0.7479, 0.0,
		.17f, 0.0f, 0.98f,		-0.0f, 0.0f, 1.0f,		0.7756, 0.0,
		0.0f, 1.0f, 0.5f,		-0.0f, 0.0f, 1.0f,		0.6145, 1.0,
		.085f, 1.0f, 0.49f,		-0.0f, 0.0f, 1.0f,		0.628, 1.0,
		.17f, 0.0f, 0.98f,		0.08f, 0.0f, 0.92f,		0.7756, 0.0,
		.34f, 0.0f, 0.94f,		0.08f, 0.0f, 0.92f,		0.8033, 0.0,
		.085f, 1.0f, 0.49f,		0.08f, 0.0f, 0.92f,		0.628, 1.0,
		.17f, 1.0f, 0.47f,		0.17f, 0.0f, 0.83f,		0.6415, 1.0,
		.34f, 0.0f, 0.94f,		0.17f, 0.0f, 0.83f,		0.8033, 0.0,
		.5f, 0.0f, 0.87f,		0.17f, 0.0f, 0.83f,		0.831, 0.0,
		.17f, 1.0f, 0.47f,		0.25f, 0.0f, 0.75f,		0.6415, 1.0,
		.25f, 1.0f, 0.435f,		0.25f, 0.0f, 0.75f,		0.655, 1.0,
		.5f, 0.0f, 0.87f,		0.25f, 0.0f, 0.75f,		0.831, 0.0,
		.64f, 0.0f, 0.77f,		0.33f, 0.0f, 0.67f,		0.8587, 0.0,
		.25f, 1.0f, 0.435f,		0.33f, 0.0f, 0.67f,		0.655, 1.0,
		.32f, 1.0f, 0.385f,		0.33f, 0.0f, 0.67f,		0.6685, 1.0,
		.64f, 0.0f, 0.77f,		0.42f, 0.0f, 0.58f,		0.8587, 0.0,
		.77f, 0.0f, 0.64f,		0.42f, 0.0f, 0.58f,		0.8864, 0.0,
		.32f, 1.0f, 0.385f,		0.42f, 0.0f, 0.58f,		0.6685, 1.0,
		.385f, 1.0f, 0.32f,		0.5f, 0.0f, 0.5f,		0.682, 1.0,
		.77f, 0.0f, 0.64f,		0.5f, 0.0f, 0.5f,		0.8864, 0.0,
		.87f, 0.0f, 0.5f,		0.5f, 0.0f, 0.5f,		0.9141, 0.0,
		.385f, 1.0f, 0.32f,		0.58f, 0.0f, 0.42f,		0.682, 1.0,
		.435f, 1.0f, 0.25f,		0.58f, 0.0f, 0.42f,		0.6955, 1.0,
		.87f, 0.0f, 0.5f,		0.58f, 0.0f, 0.42f,		0.9141, 0.0,
		.94f, 0.0f, 0.34f,		0.67f, 0.0f, 0.33f,		0.9418, 0.0,
		.435f, 1.0f, 0.25f,		0.67f, 0.0f, 0.33f,		0.6955, 1.0,
		.47f, 1.0f, 0.17f,		0.67f, 0.0f, 0.33f,		0.709, 1.0,
		.94f, 0.0f, 0.34f,		0.75f, 0.0f, 0.25f,		0.9418, 0.0,
		.98f, 0.0f, 0.17f,		0.75f, 0.0f, 0.25f,		0.9695, 0.0,
		.47f, 1.0f, 0.17f,		0.75f, 0.0f, 0.25f,		0.709, 0.0,
		.49f, 1.0f, 0.085f,		0.83f, 0.0f, 0.17f,		0.7225, 1.0,
		.98f, 0.0f, 0.17f,		0.83f, 0.0f, 0.17f,		0.9695, 0.0,
		1.0f, 0.0f, 0.0f,		0.83f, 0.0f, 0.17f,		1.0, 0.0,
		.49f, 1.0f, 0.085f,		0.92f, 0.0f, 0.08f,		0.7225, 1.0,
		0.5f, 1.0f, 0.0f,		0.92f, 0.0f, 0.08f,		0.75, 1.0,
		1.0f, 0.0f, 0.0f,		0.92f, 0.0f, 0.08f,		1.0, 0.0
	};
	int size = sizeof(verts) / sizeof(GLfloat);
	// Combine vertices, normals, and texture coordinates
	for (int i = 0; i < size; i += 8) {
		Vertex vertex;
		vertex.Position = {verts[i], verts[i + 1], verts[i + 2]};
		vertex.Normal = { verts[i + 3], verts[i + 4],verts[i + 5] }; 
		vertex.Uv = { verts[i + 6], verts[i + 7] };
		vertices.push_back(vertex);
	}


	return std::make_shared<Mesh>(vertices, size, 4);
}